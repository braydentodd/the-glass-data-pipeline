name: Daily ETL Pipeline

on:
  schedule:
    # Runs at 8:00 AM UTC every day
    - cron: '0 8 * * *'
  workflow_dispatch:  # Allows manual trigger with optional backfill dates
    inputs:
      start_date:
        description: 'Start date for backfill (YYYY-MM-DD). Leave empty for yesterday only.'
        required: false
        type: string
      end_date:
        description: 'End date for backfill (YYYY-MM-DD). Leave empty for yesterday only.'
        required: false
        type: string

jobs:
  run-etl:
    runs-on: self-hosted
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run ETL Pipeline
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          START_DATE: ${{ inputs.start_date }}
          END_DATE: ${{ inputs.end_date }}
        run: |
          if [ -n "${{ inputs.start_date }}" ] && [ -n "${{ inputs.end_date }}" ]; then
            echo "Running backfill from ${{ inputs.start_date }} to ${{ inputs.end_date }}"
          elif [ -n "${{ inputs.start_date }}" ]; then
            echo "Running backfill for single date: ${{ inputs.start_date }}"
          else
            echo "Running normal daily ETL for yesterday"
          fi
          python etl_pipeline.py
      
      - name: Notify on failure
        if: failure()
        run: |
          echo "ETL Pipeline failed at $(date)"
          # Add notification logic here (e.g., send email, Slack message)
